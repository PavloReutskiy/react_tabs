{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","activeTabId","some","tab","id","className","map","href","onClick","title","find","content","App","useState","setSelectedTabId","steTitle","undefined","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EAAwB,SAAC,GAI/B,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAC5CA,EACAD,EAAK,GAAGM,GAEZ,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBAEEE,UAAWF,EAAIC,KAAOH,EAAc,YAAc,GAClD,UAAQ,MAHV,SAKE,mBACEM,KAAI,WAAMJ,EAAIC,IACd,UAAQ,UACRI,QAAS,WACHL,EAAIC,KAAOH,GACbD,EAAcG,IALpB,SASGA,EAAIM,SAbFN,EAAIC,WAoBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,mBACGP,EAAKY,MAAK,SAAAP,GAAG,OAAIA,EAAIC,KAAOL,YAD/B,aACG,EAA4CY,cCrCxCb,EAAO,CAClB,CAAEM,GAAI,QAASK,MAAO,QAASE,QAAS,eACxC,CAAEP,GAAI,QAASK,MAAO,QAASE,QAAS,eACxC,CAAEP,GAAI,QAASK,MAAO,QAASE,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAS,SAAnD,mBAAOd,EAAP,KAAsBe,EAAtB,KACA,EAA0BD,mBAAS,SAAnC,mBAAOJ,EAAP,KAAcM,EAAd,KAWA,YAJqDC,IAAhDlB,EAAKY,MAAK,SAAAP,GAAG,OAAIA,EAAIC,KAAOL,MAC/Be,EAAiB,SAIjB,sBAAKT,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,uCAEOI,MAGP,cAAC,EAAD,CACEX,KAAMA,EACNC,cAAeA,EACfC,cAnBkB,SAACG,GACvBW,EAAiBX,EAAIC,IACrBW,EAASZ,EAAIM,cChBjBQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ade9ef4c.chunk.js","sourcesContent":["import { Tab } from '../../types/Tab';\n\ninterface Props {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const activeTabId = tabs.some(tab => tab.id === selectedTabId)\n    ? selectedTabId\n    : tabs[0].id;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={tab.id === activeTabId ? 'is-active' : ''}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (tab.id !== activeTabId) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n  const [title, steTitle] = useState('Tab 1');\n\n  const handleTabSelect = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n    steTitle(tab.title);\n  };\n\n  if ((tabs.find(tab => tab.id === selectedTabId)) === undefined) {\n    setSelectedTabId('tab-1');\n  }\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {` ${title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleTabSelect}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}